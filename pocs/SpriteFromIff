	include	/includes/hardware/offsets.i
	include	/includes/exec/exec_lib.i
	include	/includes/graphics/graphics_lib.i
	include	/includes/libraries/dos_lib.i
	move.l	4.w,a6
	lea	grafname,a1
	jsr	OpenLibrary(a6)
	move.l	d0,_GfxBase
	lea	dosname,a1
	moveq	#0,d0
	jsr	OpenLibrary(a6)
	move.l	d0,_DosBase
	bsr	IFFSpriteLoad
	lea	SpriteStruct,a5
	lea	SpriteChip,a3
	bsr	SpriteAllocer
	moveq	#72,d0
	moveq	#3,d1
	jsr	AllocMem(a6)
	move.l	d0,CL
	move.l	d0,a4
	move.w	#$E0,(a4)
	move.w	#$E2,4(a4)
	move.l	#11880,d0
	move.l	#$10003,d1
	jsr	AllocMem(a6)
	move.l	d0,BitMap
	move.w	d0,6(a4)
	swap	d0
	move.w	d0,2(a4)
	adda.l	#8,a4
	move.w	#spr0pth,d2
	moveq	#7,d0
SpriteInit	move.w	d2,(a4)+
	add.w	#2,d2
	adda.l	#2,a4
	move.w	d2,(a4)+
	add.w	#2,d2
	adda.l	#2,a4
	dbf	d0,SpriteInit
	move.l	CL,a4
	adda.l	#10,a4
	lea	SpriteChip,a3
	move.l	2(a3),a5
	move.w	4(a5),(a4)
	adda.l	#4,a4
	move.w	6(a5),(a4)
	adda.l	#4,a4
	move.w	8(a5),(a4)
	adda.l	#4,a4
	move.w	10(a5),(a4)
	adda.l	#4,a4
	move.w	12(a5),(a4)
	adda.l	#4,a4
	move.w	14(a5),(a4)
	adda.l	#4,a4
	move.w	16(a5),(a4)
	adda.l	#4,a4
	move.w	18(a5),(a4)
	adda.l	#2,a4
	move.l	6(a3),a5
	move.l	4(a5),d1
	moveq	#4,d0
SLoop	swap	d1
	move.w	d1,(a4)
	adda.w	#4,a4
	swap	d1
	move.w	d1,(a4)
	adda.w	#4,a4
	dbf	d0,SLoop
	lea	$DFF000,a5
	move.w	#$3E0,dmacon(a5)
	move.w	#35*256+110,diwstrt(a5)
	move.w	#(305-256)*256+458-256,diwstop(a5)
	move.w	#48,ddfstrt(a5)
	move.w	#214,ddfstop(a5)
	move.l	BitMap,bpl1pth(a5)
	move.w	#0,bplcon1(a5)
	move.w	#4+4*8,bplcon2(a5)
	move.w	#$1000,bplcon0(a5)
	move.w	#0,bpl1mod(a5)
	move.w	#0,bpl2mod(a5)
	move.l	CL,cop1lch(a5)
	move.w	#0,copjmp1(a5)
	move.w	#$83E0,dmacon(a5)
	move.w	#$000,color17(a5)
	move.w	#$111,color18(a5)
	move.w	#$222,color19(a5)
	move.w	#$333,color20(a5)
	move.w	#$555,color21(a5)
	move.w	#$666,color22(a5)
	move.w	#$777,color23(a5)
	move.w	#$888,color24(a5)
	move.w	#$999,color25(a5)
	move.w	#$AAA,color26(a5)
	move.w	#$BBB,color27(a5)
	move.w	#$CCC,color28(a5)
	move.w	#$DDD,color29(a5)
	move.w	#$EEE,color30(a5)
	move.w	#$FFF,color31(a5)
	move.w	#300,xPos
	move.w	#100,yPos
Bewegung	sub.w	#1,xPos
	add.w	#1,yPos
	lea	SpriteChip,a0
	move.l	2(a0),a0
	bsr	Positioner
	move.w	#$FFFF,d7
fc	dbf	d7,fc
	cmpi.w	#180,xPos
	bne	Bewegung
Check	btst	#14,ciaapra
	bne	Check
	move.l	_GfxBase,a1
	move.l	38(a1),cop1lch(a5)
	move.w	#0,copjmp1(a5)
	move.w	#$83E0,dmacon(a5)
	lea	SpriteChip,a5
	move.w	(a5)+,d7
	sub.w	#1,d7
FreeLoop	move.l	(a5),a4
	move.w	(a4)+,d4
	move.w	(a4)+,d6
	lsl.w	#2,d6
	add.w	#8,d6
	and.l	#$FFFF,d6
	move.w	d4,d5
	lsl.w	d5
	sub.w	#1,d5
SpriteFreeLoop	move.l	(a4)+,a1
	move.l	d6,d0
	jsr	FreeMem(a6)
	dbf	d5,SpriteFreeLoop
	move.l	(a5)+,a1
	lsl.w	#3,d4
	add.w	#4,d4
	move.w	d4,d0
	and.l	#$FFFF,d0
	jsr	FreeMem(a6)
	dbf	d7,FreeLoop
	move.l	CL,a1
	moveq	#72,d0
	jsr	FreeMem(a6)
	move.l	BitMap,a1
	move.l	#11880,d0
	jsr	FreeMem(a6)
	bsr	SpriteClose
	move.l	_GfxBase,a1
	jsr	CloseLibrary(a6)
	move.l	_DosBase,a1
	jsr	CloseLibrary(a6)
	rts
SpriteAllocer	adda.l	#2,a3
	move.w	(a5)+,d7
	sub.w	#1,d7
SpriteAllLoop	move.l	(a5)+,a4
	move.w	(a4)+,d6
	lsl.w	d6
	move.w	d6,d0
	lsl.w	#2,d0
	add.w	#4,d0
	and.l	#$FFFF,d0
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,(a3)+
	move.l	d0,a2
	move.l	d0,d4
	move.l	-2(a4),(a2)+
	sub.w	#1,d6
	move.w	(a4)+,d5
	lsl.w	#2,d5
	add.w	#8,d5
	and.l	#$FFFF,d5
LetsAlloc	move.l	d5,d0
	moveq	#3,d1
	jsr	AllocMem(a6)
	move.l	d0,(a2)+
	move.l	d0,a0
	move.l	(a4)+,a1
	move.w	d5,d0
	lsr.w	d0
	sub.w	#1,d0
SpriteCopy	move.w	(a1)+,(a0)+
	dbf	d0,SpriteCopy
	dbf	d6,LetsAlloc
	dbf	d7,SpriteAllLoop
	rts
Positioner	movem.l	a0-1/d0-4,-(sp)
	moveq	#0,d4
	move.w	(a0)+,d2
	sub.w	#1,d2
	move.w	(a0)+,d3
PosLoop	moveq	#0,d1
	move.w	yPos,d0
	btst	#8,d0
	beq	KeinE8
	bset	#2,d1
KeinE8	lsl.w	#8,d0
	swap	d0
	and.l	#$FF000000,d0
	or.l	d0,d1
	move.w	yPos,d0
	add.w	d3,d0
	btst	#8,d0
	beq	KeinL8
	bset	#1,d1
KeinL8	lsl.w	#8,d0
	and.l	#$FF00,d0
	or.l	d0,d1
	move.w	xPos,d0
	add.w	d4,d0
	btst	#0,d0
	beq	KeinH0
	bset	#0,d1
KeinH0	lsr.w	d0
	swap	d0
	and.l	#$FF0000,d0
	or.l	d0,d1
	move.l	(a0)+,a1
	move.l	d1,(a1)
	bset	#7,d1
	move.l	(a0)+,a1
	move.l	d1,(a1)
	add.w	#16,d4
	dbf	d2,PosLoop
	movem.l	(sp)+,a0-1/d0-4
	rts
IFFSpriteLoad	move.l	#Dateiname,d1
	move.l	#-2,d2
	move.l	_DosBase,a6
	jsr	Lock(a6)
	move.l	d0,d7
	move.l	#260,d0
	move.l	#1,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	move.l	d0,IFFData
	move.l	d7,d1
	move.l	IFFData,d2
	move.l	d2,d6
	move.l	_DosBase,a6
	jsr	Examine(a6)
	move.l	d6,a6
	move.l	124(a6),DateiLength
	move.l	IFFData,a1
	move.l	#260,d0
	move.l	4.w,a6
	jsr	FreeMem(a6)
	move.l	DateiLength,d0
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,IFFData
	move.l	#Dateiname,d1
	move.l	#1005,d2
	move.l	_DosBase,a6
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d7,d1
	move.l	IFFData,d2
	move.l	DateiLength,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	IFFData,a2	
	move.w	20(a2),d0
	move.w	d0,d5
	lsr.w	d0
	add.w	#4,d0
	and.l	#$FFFF,d0
	moveq	#1,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	move.l	d0,SpriteStruct+2
	move.l	d0,a5
	move.w	d5,d0
	lsr.w	#4,d0
	move.w	d0,(a5)+
	move.w	22(a2),d4
	move.w	d4,(a5)+
	move.w	d4,d3
	lsl.w	#2,d3
	add.w	#8,d3
	and.l	#$FFFF,d3
	move.w	d5,d7
	lsr.w	#3,d7
	sub.w	#1,d7
SpriteFastMem	move.l	d3,d0
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,(a5)+
	move.l	d0,a0
	clr.l	(a0)
	clr.l	-4(a0,d3.w)
	dbf	d7,SpriteFastMem
	movea.l	IFFData,a2
	clr.l	Empty
	lea	Empty,a0
BODYLoop	move.b	1(a0),(a0)
	move.b	2(a0),1(a0)
	move.b	3(a0),2(a0)
	move.b	(a2)+,3(a0)
	cmpi.l	#"BODY",Empty
	bne	BODYLoop
	adda.l	#4,a2
	move.l	SpriteStruct+2,a0
	adda.l	#4,a0
	moveq	#0,d3
	lsr.w	#4,d5
	sub.w	#1,d5
	lsl.w	#2,d4
	moveq	#0,d3
	moveq	#0,d7
SpriteDepth	move.l	a0,a1
	move.l	d5,d0
	moveq	#0,d6
SpriteIFFCopy1	move.l	(a1,d6.w),a3
	add.l	#8,d6
	add.w	d3,a3
	move.w	(a2)+,4(a3)
	dbf	d0,SpriteIFFCopy1
	move.l	d5,d0
	moveq	#0,d6
SpriteIFFCopy2	move.l	(a1,d6.w),a3
	add.l	#8,d6
	add.w	d3,a3
	move.w	(a2)+,6(a3)
	dbf	d0,SpriteIFFCopy2
	move.l	d5,d0
	moveq	#4,d6
SpriteIFFCopy3	move.l	(a1,d6.w),a3
	add.l	#8,d6
	add.w	d3,a3
	move.w	(a2)+,4(a3)
	dbf	d0,SpriteIFFCopy3
	move.l	d5,d0
	moveq	#4,d6
SpriteIFFCopy4	move.l	(a1,d6.w),a3
	add.l	#8,d6
	add.w	d3,a3
	move.w	(a2)+,6(a3)
	dbf	d0,SpriteIFFCopy4
	move.w	d5,d7
	add.w	#1,d7
	lsl.w	d7
	adda.l	d7,a2
	add.w	#4,d3
	cmp.w	d3,d4
	bne	SpriteDepth
	move.l	IFFData,a1
	move.l	DateiLength,d0
	jsr	FreeMem(a6)
	rts
SpriteClose	move.l	SpriteStruct+2,a0
	move.w	2(a0),d7
	lsl.w	#2,d7
	add.w	#8,d7
	and.l	#$FFFF,d7
	move.w	(a0),d6
	lsl.w	d6
	sub.w	#1,d6
	adda.l	#4,a0
	move.l	a0,a5
SpriteFreeer	move.l	(a5)+,a1
	move.l	d7,d0
	jsr	FreeMem(a6)
	dbf	d6,SpriteFreeer
	move.l	SpriteStruct+2,a1
	move.w	(a1),d0
	lsl.w	#3,d0
	add.w	#4,d0
	and.l	#$FFFF,d0
	jsr	FreeMem(a6)
	rts
DateiLength	dc.l	0
IFFData	dc.l	0
Empty	dc.l	0
BitMap	dc.l	0
CL	dc.l	0
_GfxBase	dc.l	0
_DosBase	dc.l	0
dosname	DOSNAME
grafname	GRAFNAME
Dateiname	dc.b	"/images/iff/Tank",0
xPos	dc.w	0
yPos	dc.w	0
SpriteChip	dc.w	2
	dc.l	0
	dc.l	0
SpriteStruct	dc.w	2
	dc.l	0
	dc.l	Sprite2
Sprite2	dc.w	1
	dc.w	0
	dc.l	SpriteData2
	dc.l	SpriteData2
SpriteData2	dc.w	0,0
	dc.w	0,0
