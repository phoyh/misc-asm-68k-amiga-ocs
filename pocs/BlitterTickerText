	include	/includes/exec/exec_lib.i
	include	/includes/intuition/intuition_lib.i
	include	/includes/hardware/offsets.i
	lea	$DFF000,a5
	lea	IntName,a1
	clr.l	d0
	move.l	4.w,a6
	jsr	OpenLibrary(a6)
	tst.l	d0
	beq	fertig
	move.l	d0,_IntBase
	lea	screendata,a0
	move.w	#320,4(a0)
	move.w	#256,6(a0)
	move.w	#1,8(a0)
	move.l	_IntBase,a6
	jsr	OpenScreen(a6)
	move.l	d0,screenpointer
	move.l	d0,a0
	move.l	88(a0),a0
	move.l	a0,BitMap
	add.l	#8,BitMap
	move.l	8(a0),a0
	adda.l	#440,a0
	move.l	a0,DatenAnfang
	lea	GFX,a1
	moveq	#4,d0
ki	move.l	(a1)+,(a0)
	move.l	(a1)+,4(a0)
	adda.l	#40,a0
	dbf	d0,ki
	move.l	BitMap,a0
	move.l	(a0),a0
	adda.l	#3200,a0
	move.l	a0,a1
	sub.l	#42,a1
	move.l	#$10000,d4
jmc	move.l	#$FFFF,d7
kj	dbf	d7,kj
	sub.l	#$1000,d4
	jsr	Copy
	tst.l	d4
	bne	jmc
	move.l	#$10000,d4
	suba.l	#2,a0
	cmpa.l	a1,a0
	bne	jmc
git	btst	#6,ciaapra
	bne	git
	move.l	screenpointer,a0
	move.l	_IntBase,a6
	jsr	CloseScreen(a6)
fertig	move.l	_IntBase,a1
	move.l	4.w,a6
	jsr	CloseLibrary(a6)
	rts
Copy	btst	#6,dmaconr(a5)
	bne	Copy
	move.l	DatenAnfang,bltapth(a5)
	move.l	a0,bltdpth(a5)
	clr.w	bltamod(a5)
	clr.w	bltdmod(a5)
	move.w	#%0000100111110000,d3
	or.w	d4,d3
	move.w	d3,bltcon0(a5)
	clr.w	bltcon1(a5)
	move.w	#$FFFF,bltalwm(a5)
	move.w	#$FFFF,bltafwm(a5)
	move.w	#5*64+20,bltsize(a5)
	rts
screenpointer	dc.l	0
_IntBase	dc.l	0
BitMap	dc.l	0
DatenAnfang	dc.l	0
IntName	INTNAME
screendata	ds.l	8
GFX	dc.l	%11100100100110010010100100000111,%01001000000010011000110011100000
	dc.l	%10010100101001010010100100000010,%01101000000110100101001000010000
	dc.l	%11100111101001001110111100000010,%01111000001010011100111000100000
	dc.l	%10000100101001000010100100000010,%01011000000010000100001001000000
	dc.l	%10000100100110011100100100000111,%01001000000010111001110011110000
	
