	include	/includes/exec/exec_lib.i
	include	/includes/intuition/intuition_lib.i
	include	/includes/graphics/graphics_lib.i
	include	/includes/libraries/dos_lib.i
	lea	intname,a1
	clr.l	d0
	CALLEXEC	OpenLibrary
	tst.l	d0
	beq	abbruch
	move.l	d0,_IntuitionBase
	lea	grafname,a1
	clr.l	d0
	CALLEXEC	OpenLibrary
	tst.l	d0
	beq	abbruch2
	move.l	d0,_GfxBase
	lea	dosname,a1
	clr.l	d0
	CALLEXEC	OpenLibrary
	tst.l	d0
	beq	abbruch3
	move.l	d0,_DOSBase
	move.l	#dateiname,d1
	move.l	#-2,d2
	CALLDOS	Lock
	move.l	d0,d7
	tst.l	d0
	beq	abbruch3
	move.l	#260,d0
	move.l	#1,d1
	CALLEXEC	AllocMem
	move.l	d0,data
	move.l	d7,d1
	move.l	data,d2
	move.l	d2,d6
	CALLDOS	Examine
	move.l	d6,a6
	move.l	124(a6),dateilaenge
	move.l	data,a1
	move.l	#260,d0
	CALLEXEC	FreeMem
	move.l	dateilaenge,d0
	move.l	#1,d1
	CALLEXEC	AllocMem
	move.l	d0,data
	move.l	#dateiname,d1
	move.l	#1005,d2
	CALLDOS	Open
	move.l	d0,filehandle
	move.l	filehandle,d1
	move.l	data,d2
	move.l	dateilaenge,d3
	CALLDOS	Read
	move.l	data,a0
	move.w	20(a0),breite
	move.w	breite,d0
	roxr.w	#3,d0
	move.w	d0,BytesPerRow
	move.w	22(a0),hoehe
	move.b	28(a0),ttc
	move.b	30(a0),cge
	move.l	#screendata,a0
	move.w	breite,4(a0)
	move.w	hoehe,6(a0)
	move.w	tiefe,8(a0)
	move.w	breite,d0
	clr.l	d1
	cmpi.w	#321,d0
	blt	funky1
	add.w	#32768,d1
funky1	move.w	hoehe,d0
	cmpi.w	#257,d0
	blt	funky2
	add.w	#4,d1
funky2	move.w	d1,12(a0)
	CALLINT	OpenScreen
	move.l	d0,screenpointer
	add.l	#84,d0
	move.l	d0,RP
	sub.l	#40,d0
	move.l	d0,VP
	move.l	#1,d6
	move.w	tiefe,d0
lod	sub.w	#1,d0
	mulu	#2,d6
	tst.w	d0
	bne	lod
	clr.l	d7
	move.l	data,d0
	add.l	#48,d0
	move.l	d0,a2
lod2	clr.l	d1
	clr.l	d2
	clr.l	d3
	move.b	(a2)+,d1
	move.b	(a2)+,d2
	move.b	(a2)+,d3
	roxr.b	#4,d1
	roxr.b	#4,d2
	roxr.b	#4,d3
	move.l	VP,a0
	move.l	d7,d0
	CALLGRAF	SetRGB4
	add.w	#1,d7
	cmp.w	d6,d7
	bne	lod2
	move.l	#empty,a6
lcs	move.b	1(a6),(a6)
	move.b	2(a6),1(a6)
	move.b	3(a6),2(a6)
	move.b	(a2)+,3(a6)
	cmpi.l	#"BODY",empty
	bne	lcs
	bra	goon
easybit	clr.l	d0
	move.w	BytesPerRow,d1
jc	add.w	#1,d0
	move.b	(a2)+,(a4)+
	cmp.w	d0,d1
	bne	jc
	bra	nextt
goon	adda.l	#4,a2
	move.l	screenpointer,a0
	move.l	$58(a0),a0
	move.l	#BitMapAdr,a5
	move.l	8(a0),(a5)
	move.l	12(a0),4(a5)
	move.l	16(a0),8(a5)
	move.l	20(a0),12(a5)
	move.l	24(a0),16(a5)
	clr.l	d7
	clr.l	d2
	move.l	#Byte,a6
	clr.l	d4
	move.w	BytesPerRow,d4
hoehenloop	clr.l	d5
	move.l	#BitMapAdr,a5
tiefenloop	move.l	(a5)+,d0
	add.l	d7,d0
	move.l	d0,a4
	move.w	comp,d0
	tst.w	d0
	beq	easybit
	clr.w	d3
reihe	cmp.w	d3,d4
	bls	nextt
	move.b	(a2)+,(a6)
	move.b	(a2)+,1(a6)
	clr.l	d0
	move.b	Byte,d0
	cmpi.b	#127,d0
	bls	firstpos
secondpos	sub.w	#3,d0
	move.w	#254,d6
	sub.w	d0,d6
	add.b	d6,d3
	sub.w	#1,d6
fe	move.b	1(a6),(a4)+
	dbf	d6,fe
	bra	reihe
firstpos	move.b	1(a6),(a4)+
	add.w	#1,d3
	tst.b	Byte
	beq	reihe
	add.w	d0,d3
	sub.w	#1,d0
jcwe	move.b	(a2)+,(a4)+
	dbf	d0,jcwe
	bra	reihe
nextt	add.w	#1,d5
	move.w	tiefe,d1
	cmp.w	d5,d1
	bne	tiefenloop
	clr.l	d0
	add.l	d4,d7
	add.w	#1,d2
	move.w	hoehe,d1
	cmp.w	d2,d1
	bne	hoehenloop
bee	move.l	filehandle,d1
	CALLDOS	Close
	move.l	data,a1
	move.l	dateilaenge,d0
	CALLEXEC	FreeMem
	move.l	#1600,d0
	move.l	#2,d1
	CALLEXEC	AllocMem
	move.l	d0,backhandler
	move.l	#160,d0
	move.l	#2,d1
	CALLEXEC	AllocMem
	move.l	d0,zspeicher
	move.l	#32,d0
	move.l	#2,d1
	CALLEXEC	AllocMem
	move.l	d0,def
	move.l	#$DFF000,a0
	move.l	#BitMapAdr,a1
	move.l	backhandler,d1
	move.w	#0,$60(a0)
	move.w	#0,$66(a0)
	move.w	#$FFFF,$44(a0)
	move.w	#$FFFF,$46(a0)
	move.w	#%0000100111110000,$40(a0)
	move.w	#%0000000000000000,$42(a0)
	move.l	#4,d2
hce	move.w	2(a0),d3
	btst	#14,d3
	bne	hce
	move.l	(a1)+,$50(a0)
	move.l	d1,$54(a0)
	add.l	#320,d1
	move.w	#%0000001000010100,$58(a0)
	dbf	d2,hce
	move.l	#303,d5
jcsb	move.l	d5,d0
	lsr.w	#4,d0
	move.l	d0,d6
	lsl.w	#1,d6
	lsl.w	#4,d0
	move.l	d5,d1
	sub.w	d0,d1
	move.l	zspeicher,a2
	move.l	#sprite,a3
	move.l	#4,d3
blittest2	move.w	2(a0),d7
	btst	#14,d7
	bne	blittest2
step2	move.l	#7,d2
step1	move.l	(a3),d0
	and.l	#$FFFF0000,d0
	lsr.l	d1,d0
	move.l	d0,(a2)+
	add.l	#2,a3
	dbf	d2,step1
	dbf	d3,step2
	move.l	def,a2
	move.l	#7,d2
step3	move.l	(a3),d0
	and.l	#$FFFF0000,d0
	lsr.l	d1,d0
	move.l	d0,(a2)+
	add.l	#2,a3
	dbf	d2,step3
	move.l	#BitMapAdr,a1
	move.l	zspeicher,d4
	move.l	backhandler,d1
	add.l	d6,d1
blittest	move.w	2(a0),d7
	btst	#14,d7
	bne	blittest
	move.w	#36,$66(a0)
	move.w	#36,$62(a0)
	move.w	#0,$64(a0)
	move.w	#%0000111111100100,$40(a0)
	move.w	#%0000000000000000,$42(a0)
	move.l	#4,d2
hcev	move.w	2(a0),d3
	btst	#14,d3
	bne	hcev
	move.l	(a1)+,d0
	add.l	d6,d0
	move.l	d0,$54(a0)
	move.l	d4,$50(a0)
	move.l	d1,$4C(a0)
	add.l	#320,d1
	add.l	#32,d4
	move.l	def,$48(a0)
	move.w	#%0000001000000010,$58(a0)
	dbf	d2,hcev
	move.l	#$6FFF,d1
g4e	dbf	d1,g4e
	sub.l	#1,d5
	tst.l	d5
	bne	jcsb
	move.l	#$FFFFF,d0
br	sub.l	#1,d0
	tst.l	d0
	bne	br
	move.l	def,a1
	move.l	#32,d0
	CALLEXEC	FreeMem
	move.l	zspeicher,a1
	move.l	#160,d0
	CALLEXEC	FreeMem
	move.l	backhandler,a1
	move.l	#1600,d0
	CALLEXEC	FreeMem
	move.l	screenpointer,a0
	CALLINT	CloseScreen
abbruch3	move.l	_DOSBase,a1
	CALLEXEC	CloseLibrary
abbruch2	move.l	_GfxBase,a1
	CALLEXEC	CloseLibrary
abbruch	move.l	_IntuitionBase,a1
	CALLEXEC	CloseLibrary
	rts
dateiname	dc.b	"/images/iff/MenuDisk",0
dateilaenge	dc.l	0
filehandle	dc.l	0
_IntuitionBase	dc.l	0
intname	INTNAME
_GfxBase	dc.l	0
_DOSBase	dc.l	0
dosname	dc.b	"dos.library",0
	cnop 0,2
grafname	GRAFNAME
screendata	dc.l	0,0,0,0,0,0,0,0,0
screenpointer	dc.l	0
ViewPort	dc.l	0
empty	dc.l	0,0,0,0,0,0
breite	dc.w	0
hoehe	dc.w	0
tiefe	dc.b	0
ttc	dc.b	0
comp	dc.b	0
cge	dc.b	0
ColorMap	dc.l	0
VP	dc.l	0
RP	dc.l	0
BytesPerRow	dc.w	0
BitMapAdr	dc.l	0,0,0,0,0
Byte	dc.w	0
data	dc.l	0
backhandler	dc.l	0
zspeicher	dc.l	0
def	dc.l	0
sprite	dc.w	%0111110000111100
	dc.w	%0110011001100110
	dc.w	%0110011001100110
	dc.w	%0111110001100110
	dc.w	%0110000001100110
	dc.w	%0110000001100110
	dc.w	%0110000000111100
	dc.w	0
	dc.w	%0101010000010100
	dc.w	%0010001000100010
	dc.w	%0100010001000100
	dc.w	%0010100000100010
	dc.w	%0100000001000100
	dc.w	%0010000000100010
	dc.w	%0100000000010100
	dc.w	0
	dc.w	%0010100000101000
	dc.w	%0100010001000100
	dc.w	%0010001000100010
	dc.w	%0101010001000100
	dc.w	%0010000000100010
	dc.w	%0100000001000100
	dc.w	%0010000000101000
	dc.w	0
	dc.w	%0111110000111100
	dc.w	%0000000000000000
	dc.w	%0110011001100110
	dc.w	%0000000000000000
	dc.w	%0110000001100110
	dc.w	%0000000000000000
	dc.w	%0110000000111100
	dc.w	0
	dc.w	%0101010000010100
	dc.w	%0100010001000100
	dc.w	%0100010001000100
	dc.w	%0101010001000100
	dc.w	%0100000001000100
	dc.w	%0100000001000100
	dc.w	%0100000000110100
	dc.w	0
	dc.w	%0111110000111100
	dc.w	%0110011001100110
	dc.w	%0110011001100110
	dc.w	%0111110001100110
	dc.w	%0110000001100110
	dc.w	%0110000001100110
	dc.w	%0110000000111100
	dc.w	0

