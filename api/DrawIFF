	movem.l	d0-d7/a0-a3,-(sp)
	move.l	56(sp),a0
	move.l	52(sp),screenpointer
	move.w	20(a0),breite
	move.w	breite,d0
	roxr.w	#3,d0
	move.w	d0,BytesPerRow
	move.w	22(a0),hoehe
	move.b	28(a0),ttc
	move.b	30(a0),cge
	move.l	#empty,a1
lcs	move.b	1(a1),(a1)
	move.b	2(a1),1(a1)
	move.b	3(a1),2(a1)
	move.b	(a0)+,3(a1)
	cmpi.l	#"BODY",empty
	bne	lcs
	bra	goon
easybit	clr.l	d0
	move.w	BytesPerRow,d1
jc	add.w	#1,d0
	move.b	(a0)+,(a3)+
	cmp.w	d0,d1
	bne	jc
	bra	nextt
goon	adda.l	#4,a0
	move.l	screenpointer,a2
	move.l	$58(a2),a2
	move.l	#BitMapAdr,a1
	move.l	8(a2),d7
	add.l	60(sp),d7
	move.l	d7,(a1)
	move.l	12(a2),d7
	add.l	60(sp),d7
	move.l	d7,4(a1)
	move.l	16(a2),d7
	add.l	60(sp),d7
	move.l	d7,8(a1)
	move.l	20(a2),d7
	add.l	60(sp),d7
	move.l	d7,12(a1)
	move.l	24(a2),d7
	add.l	60(sp),d7
	move.l	d7,16(a1)
	clr.l	d7
	clr.l	d2
	move.l	#Byte,a2
	clr.l	d4
	move.w	BytesPerRow,d4
hoehenloop	clr.l	d5
	move.l	#BitMapAdr,a1
tiefenloop	move.l	(a1)+,d0
	add.l	d7,d0
	move.l	d0,a3
	move.w	comp,d0
	tst.w	d0
	beq	easybit
	clr.w	d3
reihe	cmp.w	d3,d4
	bls	nextt
	move.b	(a0)+,(a2)
	move.b	(a0)+,1(a2)
	clr.l	d0
	move.b	Byte,d0
	cmpi.b	#127,d0
	bls	firstpos
secondpos	sub.w	#3,d0
	move.w	#254,d6
	sub.w	d0,d6
	add.b	d6,d3
	sub.w	#1,d6
fe	move.b	1(a2),(a3)+
	dbf	d6,fe
	bra	reihe
firstpos	move.b	1(a2),(a3)+
	add.w	#1,d3
	tst.b	Byte
	beq	reihe
	add.w	d0,d3
	sub.w	#1,d0
jcwe	move.b	(a0)+,(a3)+
	dbf	d0,jcwe
	bra	reihe
nextt	add.w	#1,d5
	move.w	tiefe,d1
	cmp.w	d5,d1
	bne	tiefenloop
	clr.l	d0
	add.l	d4,d7
	add.l	64(sp),d7
	add.w	#1,d2
	move.w	hoehe,d1
	cmp.w	d2,d1
	bne	hoehenloop
	movem.l	(sp)+,d0-d7/a0-a3
	rts
filehandle	dc.l	0
screenpointer	dc.l	0
empty	dc.l	0,0,0,0,0,0
breite	dc.w	0
hoehe	dc.w	0
tiefe	dc.b	0
ttc	dc.b	0
comp	dc.b	0
cge	dc.b	0
BytesPerRow	dc.w	0
BitMapAdr	dc.l	0,0,0,0,0
Byte	dc.w	0
