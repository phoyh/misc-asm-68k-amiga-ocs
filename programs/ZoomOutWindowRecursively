	include	/includes/exec/exec_lib.i
	include	/includes/intuition/intuition_lib.i
	include	/includes/hardware/offsets.i
WINDOW	macro
	dc.w	\1
	dc.w	\2
	dc.w	\3
	dc.w	\4
	dc.b	30,62
	dc.l	\5
	dc.l	\9
	dc.l	\6
	dc.l	0
	dc.l	\7
\8	dc.l	0
	dc.l	0
	dc.w	\3
	dc.w	\4
	dc.w	\3
	dc.w	\4
	dc.w	15
	endm
	lea	IntName,a1
	clr.l	d0
	move.l	4.w,a6
	jsr	OpenLibrary(a6)
	tst.l	d0
	beq	fertig
	move.l	d0,_IntBase
	move.l	#8000,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,Schablone
	move.l	#40*6*200,d0
	move.l	#$10003,d1
	jsr	AllocMem(a6)
	move.l	d0,RealB
	lea	BitMap+8,a0
	moveq	#5,d7
InitBitMap	move.l	d0,(a0)+
	add.l	#40*200,d0
	dbf	d7,InitBitMap
	lea	screendata,a0
	move.w	#320,4(a0)
	move.w	#200,6(a0)
	move.w	#6,8(a0)
	move.b	#3,10(a0)
	move.b	#35,11(a0)
	move.w	#128,12(a0)
	move.w	#64,14(a0)
	move.l	#ScrName,20(a0)
	move.l	#BitMap,28(a0)
	move.l	_IntBase,a6
	jsr	OpenScreen(a6)
	move.l	d0,screenpointer
	move.l	screenpointer,point3
	lea	windowdata,a0
	jsr	OpenWindow(a6)
	move.l	d0,windowpointer
	move.l	screenpointer,a0
	move.l	88(a0),a0
	adda.l	#8,a0
	move.l	(a0),Plane1
	bra	hcwon
	move.l	(a0),a1
	move.w	#1999,d7
hcw	move.l	#$FFFFFFFF,(a1)+
	dbf	d7,hcw
hcwon	move.l	a0,a1
	lea	Planes,a2
	moveq	#5,d7
DestInit	move.l	(a1)+,(a2)+
	dbf	d7,DestInit
	move.l	Schablone,a2
	moveq	#0,d7
SchablInit	moveq	#5,d6
	moveq	#0,d0
	movea.l	a0,a1
SchablLoop	move.l	(a1)+,a3
	or.l	(a3,d7.w),d0
	dbf	d6,SchablLoop
	move.l	d0,(a2)+
	add.w	#4,d7
	cmpi.w	#8000,d7
	bne	SchablInit
	move.l	screenpointer,a0
	jsr	DisplayBeep(a6)
	move.l	#320,d4
	move.l	#200,d5
Loop	move.l	#Source,d0
	move.l	#Dest,d1
	move.l	#0,d2
	move.l	#0,d3
	and.l	#$FFFF,d4
	and.l	#$FFFF,d5
	lsl.w	#3,d4
	lsl.w	#3,d5
	divu	#9,d4
	divu	#9,d5
	bsr	ZoomOut
	cmpi.w	#10,d4
	bhi	Loop
	move.l	screenpointer,a0
	jsr	DisplayBeep(a6)
	move.l	windowpointer,a0
	jsr	CloseWindow(a6)
	move.l	screenpointer,a0
	jsr	CloseScreen(a6)
fertig	move.l	_IntBase,a1
	move.l	4.w,a6
	jsr	CloseLibrary(a6)
	move.l	Schablone,a1
	move.l	#8000,d0
	jsr	FreeMem(a6)
	move.l	RealB,a1
	move.l	#40*6*200,d0
	jsr	FreeMem(a6)
	rts
windowdata	WINDOW	0,10,200,190,%00000000000000000001000,0,WindowName,point3,$100F
windowpointer	dc.l	0
WindowName	dc.b	"Let's Shrink",0
ScrName	dc.b	"ZoomOutFast",0
screenpointer	dc.l	0
_IntBase	dc.l	0
BitMap	dc.w	40,200,6,0
	ds.l	6
	dc.l	0
RealB	dc.l	0
IntName	INTNAME
screendata	ds.b	32
Source	dc.w	320
	dc.w	200
	dc.w	6
	dc.w	40
	dc.w	0,0,0
Plane1	dc.l	0
Schablone	dc.l	0
	dc.w	0
	dc.w	8000
Dest	dc.w	40
	dc.w	200
	dc.w	6,0
Planes	ds.l	8
	dc.l	0,0,0
	dc.w	0
	dc.w	8000
XPosSour	equ	0
XPosDest	equ	2
DestOben	equ	4
XFact	equ	6
YFact	equ	8
DestHight	equ	10
DestPlanes	equ	12
XZahler	equ	16
ZoomOut	movem.l	d4-5/a4-6,-(a7)
	lea	Variablen,a4
	move.l	d0,a0
	move.w	24(a0),d6
	move.w	d2,XPosDest(a4)
	move.w	d3,DestOben(a4)
	move.w	d4,XZahler(a4)
	sub.w	#1,XZahler(a4)
	move.w	d5,DestHight(a4)
	sub.w	#1,DestHight(a4)
	move.w	(a0),d2
	move.w	2(a0),d3
	lsl.w	#4,d2
	lsl.w	#4,d3
	divu	d4,d2
	divu	d5,d3
	move.w	d2,XFact(a4)
	move.w	d3,YFact(a4)
	move.l	18(a0),a6
	move.l	d1,a1
	move.l	a1,DestPlanes(a4)
	add.l	#8,DestPlanes(a4)
	move.w	#8,XPosSour(a4)
XLoop	move.w	XPosDest(a4),d1
	lsr.w	#3,d1
	move.w	DestOben(a4),d3
	mulu	(a1),d3
	add.w	d3,d1
	move.w	XPosDest(a4),d3
	not.b	d3
	and.w	#7,d3
	move.w	XPosSour(a4),d0
	move.w	d0,d2
	lsr.w	#7,d0
	not.b	d2
	lsr.b	#4,d2
	and.w	#7,d2
	moveq	#7,d7
	move.w	DestHight(a4),d5
YLoop	move.w	d7,d4
	lsr.w	#4,d4
	mulu	6(a0),d4
	add.w	d0,d4
	btst	d2,(a6,d4.w)
	beq	NoPoint
	move.l	DestPlanes(a4),a3
	move.l	14(a0),a2
	add.w	d4,a2
MainRout	move.l	(a3)+,a5
	btst	d2,(a2)
	bne	BitOn1
	bclr	d3,(a5,d1.w)
	bra	Bit2
BitOn1	bset	d3,(a5,d1.w)
Bit2	adda.w	d6,a2
	move.l	(a3)+,a5
	btst	d2,(a2)
	bne	BitOn2
	bclr	d3,(a5,d1.w)
	bra	Bit3
BitOn2	bset	d3,(a5,d1.w)
Bit3	adda.w	d6,a2
	move.l	(a3)+,a5
	btst	d2,(a2)
	bne	BitOn3
	bclr	d3,(a5,d1.w)
	bra	Bit4
BitOn3	bset	d3,(a5,d1.w)
Bit4	adda.w	d6,a2
	move.l	(a3)+,a5
	btst	d2,(a2)
	bne	BitOn4
	bclr	d3,(a5,d1.w)
	bra	Bit5
BitOn4	bset	d3,(a5,d1.w)
Bit5	adda.w	d6,a2
	move.l	(a3)+,a5
	btst	d2,(a2)
	bne	BitOn5
	bclr	d3,(a5,d1.w)
	bra	Bit6
BitOn5	bset	d3,(a5,d1.w)
Bit6	adda.w	d6,a2
	move.l	(a3)+,a5
	btst	d2,(a2)
	bne	BitOn6
	bclr	d3,(a5,d1.w)
	bra	NoPoint
BitOn6	bset	d3,(a5,d1.w)
NoPoint	add.w	YFact(a4),d7
	add.w	(a1),d1
	dbf	d5,YLoop
	move.w	XFact(a4),d7
	add.w	d7,XPosSour(a4)
	add.w	#1,XPosDest(a4)
	sub.w	#1,XZahler(a4)
	bne	XLoop
	movem.l	(a7)+,d4-5/a4-6
	rts
Variablen	ds.w	9
