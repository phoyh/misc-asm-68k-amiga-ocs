	include	"/includes/exec/exec_lib.i"
	include	"/includes/intuition/intuition_lib.i"
	include	"/includes/libraries/dos_lib.i"
	include	"/includes/graphics/graphics_lib.i"
	include	"/includes/hardware/offsets.i"
	lea	intname,a1
	move.l	4.w,a6
	moveq	#0,d0
	jsr	OpenLibrary(a6)
	move.l	d0,_IntBase
	lea	grafname,a1
	moveq	#0,d0
	jsr	OpenLibrary(a6)
	move.l	d0,_GfxBase
	lea	dosname,a1
	moveq	#0,d0
	jsr	OpenLibrary(a6)
	move.l	d0,_DosBase
	move.l	#ZhaoMing,d0
	bsr	DuZhao
	tst.l	d0
	beq	Abbruch
	move.l	d0,IntScreen
	move.l	d1,XColorMap
	move.l	d0,a0
	move.l	$58(a0),d0
	add.l	#8,d0
	move.l	d0,IntBitStr
	move.l	IntScreen,d0
	bsr	ZaiZuo
	move.l	d0,BitMapStr
	move.l	BitMapStr,d0
	move.l	XColorMap,d1
	bsr	DaCaiZhao
	move.l	d0,ColorBitmap
	move.l	ColorBitmap,d0
	move.l	IntBitStr,d1
	bsr	BiJiao
	move.l	d0,Kantenschaerfe
	move.l	Kantenschaerfe,d0
	move.l	IntScreen,d1
	move.l	BitMapStr,d2
	bsr	XuanYanSe
	move.w	d0,Kantenschwelle

	move.l	IntScreen,d0
	move.l	XColorMap,d1
	bsr	WanZhao
	move.l	ColorBitmap,d0
	bsr	WanCaiZhao
	move.l	Kantenschaerfe,d0
	bsr	WanBiJiao
	move.l	BitMapStr,d0
	bsr	ZaiZuoWan
Abbruch	move.l	4.w,a6
	move.l	_DosBase,a1
	jsr	CloseLibrary(a6)
	move.l	_GfxBase,a1
	jsr	CloseLibrary(a6)
	move.l	_IntBase,a1
	jsr	CloseLibrary(a6)
	rts
_IntBase	dc.l	0
_GfxBase	dc.l	0
_DosBase	dc.l	0
IntScreen	dc.l	0
XColorMap	dc.l	0
ColorBitmap	dc.l	0
Kantenschaerfe	dc.l	0
IntBitStr	dc.l	0
Kantenschwelle	dc.w	0
BitMapStr	ds.l	5
intname	INTNAME
grafname	GRAFNAME
dosname	DOSNAME
ZhaoMing	dc.b	"/images/iff/MenuDisk",0
	even

XuanYanSe	;       d0=Kantenschaerfe(a3),d1=IntScreen(a5),d2=BitMapStr(a4)
	;	IntBitStr(a1)
	move.l	d1,a5
	move.l	d2,a4
	move.l	d0,a3
	move.l	$58(a5),a1
	adda.l	#8,a1
	move.w	16(a5),d5
	lsr.w	#1,d5
XuanYanSeWai	moveq.l	#0,d2
	move.l	a3,a0
	moveq.l	#0,d3
XuanYanSeVert	moveq.l	#0,d1
XuanYanSeHor	cmp.b	(a0)+,d5
	bge	WeiZhiBuCu
	bsr	FanWeiZhi
	bra	WeiZhiCu
WeiZhiBuCu	bsr	MingWeiZhi
WeiZhiCu	add.w	#1,d1
	cmpi.w	#320,d1
	bne	XuanYanSeHor
	btst	#6,ciaapra
	bne	NoMouse
	moveq.l	#1,d3
NoMouse	move.w	16(a5),d5
	lsr.w	#1,d5
	add.w	#1,d2
	cmpi.w	#256,d2
	bne	XuanYanSeVert
	tst.w	d3
	beq	XuanYanSeWai
	move.w	d5,d0
	rts
	;	d0=Kantenschwelle

RefreshInt	;	d0=BitMapStr,d1=IntBitStr
	movem.l	d6-7/a0-3,-(a7)
	move.l	d1,a3
	move.l	d0,a2
	moveq.l	#4,d7
RefreshOut	move.w	#2559,d6
	move.l	(a2)+,a0
	move.l	(a3)+,a1
RefreshIn	move.l	(a0)+,(a1)+
	dbf	d6,RefreshIn
	dbf	d7,RefreshOut
	movem.l	(a7)+,d6-7/a0-3
	rts

FanWeiZhi	;	a1=IntBitStr,d1=X-Offset,d2=Y-Offset
	movem.l	d0-2/a0-1,-(a7)
	mulu	#40,d2
	move.w	d1,d0
	lsr.w	#3,d0
	add.w	d0,d2
	not.w	d1
	and.w	#7,d1
	moveq.l	#4,d0
FanWeiZhiFu	move.l	(a1)+,a0
	bclr	d1,(a0,d2)
	dbf	d0,FanWeiZhiFu
	movem.l	(a7)+,d0-2/a0-1
	rts

MingWeiZhi	;	a1=IntBitStr,d1=X-Offset,d2=Y-Offset
	movem.l	d0-2/a0-1,-(a7)
	mulu	#40,d2
	move.w	d1,d0
	lsr.w	#3,d0
	add.w	d0,d2
	not.w	d1
	and.w	#7,d1
	moveq.l	#4,d0
MingWeiZhiFu	move.l	(a1)+,a0
	bset	d1,(a0,d2)
	dbf	d0,MingWeiZhiFu
	movem.l	(a7)+,d0-2/a0-1
	rts

ZaiZuoWan	;	d0=BitMapStr
	move.l	d0,a5
	moveq.l	#4,d7
	move.l	4.w,a6
ZaiZuoWanFu	move.l	(a5)+,a1
	move.l	#10240,d0
	jsr	FreeMem(a6)
	dbf	d7,ZaiZuoWanFu
	rts

ZaiZuo	;	d0=IntScreen
	move.l	d0,a5
	move.l	$58(a5),a5
	adda.l	#8,a5
	lea	BitAlign,a4
	move.l	4.w,a6
	moveq.l	#4,d7
ZaiZuoWai	move.w	#2559,d6
	move.l	#10240,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,a0
	move.l	d0,(a4)+
	move.l	(a5)+,a1
ZaiZuoLi	move.l	(a1)+,(a0)+
	dbf	d6,ZaiZuoLi
	dbf	d7,ZaiZuoWai
	move.l	#BitAlign,d0
	rts
	;	d0=BitMapStr
BitAlign	ds.l	5

BiJiao	;	d0=ColorBitmap(a5),d1=IntBitStr(a1)
	move.l	d1,d7
	move.l	d0,a5
	move.l	#81920,d0
	move.l	#1,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	move.l	d0,Edge
	move.l	d0,a3
	move.l	d7,a1
	lea	GongJin,a4
	move.w	#255,d7
	moveq	#0,d2
	moveq	#0,d1
BiJiaoWai	move.w	#319,d6
BiJiaoLi	moveq	#0,d4
	moveq	#19,d5
	lea	WaiBian,a2
BiJiaoFu	move.w	(a2),d0
	move.b	0(a5,d0),d1
	add.b	#15,d1
	sub.b	0(a5),d1
	move.b	(a4,d1),d2
	add.w	d2,d4
	move.w	(a2),d0
	move.b	1(a5,d0),d1
	add.b	#15,d1
	sub.b	1(a5),d1
	move.b	(a4,d1),d2
	add.w	d2,d4
	move.w	(a2)+,d0
	move.b	2(a5,d0),d1
	add.b	#15,d1
	sub.b	2(a5),d1
	move.b	(a4,d1),d2
	add.w	d2,d4
	cmpi.w	#8,d5
	bne	LiBuZai
	lsr.w	#1,d4
LiBuZai	dbf	d5,BiJiaoFu
	lsr.w	#5,d4
	cmpi.w	#255,d4
	blt	BiJiaoOK
	move.w	#255,d4
BiJiaoOK	move.b	d4,(a3)+
	adda.l	#3,a5
	move.w	#255,d2
	move.w	#319,d1
	sub.w	d6,d1
	sub.w	d7,d2
	bsr	FanWeiZhi
	moveq.l	#0,d1
	dbf	d6,BiJiaoLi
	adda.l	#12,a5
	dbf	d7,BiJiaoWai
	move.l	Edge,d0
	rts
	;	d0=Kantenschaerfe
Edge	dc.l	0
WaiBian	dc.w	-6,6,-978,978,-966,966,1944,-1944
	dc.w	1947,-1947,1941,-1941
LiBian	dc.w	-3,3,-975,-969,969,975,-972,972
GongJin	dc.b	225,196,169,144,121,100,81,64,49,36
	dc.b	25,16,9,4,1,0,1,4,9,16,25,36,49,64
	dc.b	81,100,121,144,169,196,225
	even

WanBiJiao	;	d0=Kantenschaerfe
	move.l	d0,a1
	move.l	#81920,d0
	move.l	4.w,a6
	jsr	FreeMem(a6)
	rts

DuYanSe	;	a5=BitmapStr,d2=RelOffset,d1=ByteOffset
	;	!! a0 wird ï¿½berschrieben !!
	moveq.l	#0,d0
	move.l	(a5),a0
	btst	d1,(a0,d2)
	beq	DuYanSe1
	moveq.l	#1,d0
DuYanSe1	move.l	4(a5),a0
	btst	d1,(a0,d2)
	beq	DuYanSe2
	or.b	#2,d0
DuYanSe2	move.l	8(a5),a0
	btst	d1,(a0,d2)
	beq	DuYanSe3
	or.b	#4,d0
DuYanSe3	move.l	12(a5),a0
	btst	d1,(a0,d2)
	beq	DuYanSe4
	or.b	#8,d0
DuYanSe4	move.l	16(a5),a0
	btst	d1,(a0,d2)
	beq	DuYanSe5
	or.b	#16,d0
DuYanSe5	rts
	;	d0=Pixelfarbe

DaCaiZhao	;	d0=BitmapStr(a5),d1=XColorMap(a4)
	move.l	d0,a5
	move.l	d1,a4
	move.l	#252720,d0
	move.l	#$10001,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	add.l	#650,d0
	move.l	d0,SuperColMap
	move.l	d0,a1
	moveq.l	#0,d2
	moveq.l	#7,d1
	move.w	#255,d7
DaCaiZhaoWai	move.w	#319,d6
DaCaiZhaoLi	bsr	DuYanSe
	move.w	d0,d3
	lsl.w	#1,d0
	add.w	d3,d0
	move.b	0(a4,d0),(a1)+
	move.b	1(a4,d0),(a1)+
	move.b	2(a4,d0),(a1)+
	tst.w	d1
	bne	DaCaiZhaoPing
	moveq.l	#8,d1
	add.w	#1,d2
DaCaiZhaoPing	sub.w	#1,d1
	dbf	d6,DaCaiZhaoLi
	adda.l	#12,a1
	dbf	d7,DaCaiZhaoWai
	move.l	SuperColMap,d0
	rts
	;	d0=ColorBitmap
SuperColMap	dc.l	0

WanCaiZhao	;	d0=ColorBitmap
	move.l	4.w,a6
	sub.l	#650,d0
	move.l	d0,a1
	move.l	#252720,d0
	jsr	FreeMem(a6)
	rts
	
DuZhao	;	d0=Dateiname
	move.l	d0,DateiName
	move.l	DateiName,d1
	move.l	#-2,d2
	move.l	_DosBase,a6
	jsr	Lock(a6)
	tst.l	d0
	beq	NotFound
	move.l	d0,d7
	move.l	#260,d0
	move.l	#1,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	move.l	d0,IFFData
	move.l	d7,d1
	move.l	IFFData,d2
	move.l	d2,d6
	move.l	_DosBase,a6
	jsr	Examine(a6)
	move.l	d7,d1
	jsr	UnLock(a6)
	move.l	d6,a6
	move.l	124(a6),DateiLength
	move.l	IFFData,a1
	move.l	#260,d0
	move.l	4.w,a6
	jsr	FreeMem(a6)
	move.l	DateiLength,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,IFFData
	move.l	#96,d0
	move.l	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,SpecColorMap
	move.l	DateiName,d1
	move.l	#1005,d2
	move.l	_DosBase,a6
	jsr	Open(a6)
	move.l	d0,d7
	move.l	d7,d1
	move.l	IFFData,d2
	move.l	DateiLength,d3
	jsr	Read(a6)
	move.l	d7,d1
	jsr	Close(a6)
	move.l	IFFData,a2	
	move.w	20(a2),d0
	move.w	d0,Width
	lsr.w	#3,d0
	move.w	d0,BytesPerRow
	move.w	22(a2),Hight
	move.b	28(a2),Depth+1
	move.b	30(a2),Compression+1
	lea	ScreenData,a0
	clr.l	d1
	move.w	Width,d0
	cmpi.w	#321,d0
	blt	NoHires
	add.w	#32768,d1
NoHires	move.w	Hight,d0
	cmpi.w	#257,d0
	blt	NoInterlaced
	add.w	#4,d1
NoInterlaced	move.w	d1,12(a0)
	move.l	_IntBase,a6
	jsr	OpenScreen(a6)
	move.l	d0,ScreenPointer
	add.l	#84,d0
	move.l	d0,RP
	sub.l	#40,d0
	move.l	d0,VP
	moveq	#1,d6
	move.w	Depth,d0
	sub.w	#1,d0
FarbZahl	lsl.w	d6
	dbf	d0,FarbZahl
	move.l	IFFData,a2
	clr.l	Empty
	lea	Empty,a0
CMAPLoop	move.b	1(a0),(a0)
	move.b	2(a0),1(a0)
	move.b	3(a0),2(a0)
	move.b	(a2)+,3(a0)
	cmpi.l	#"CMAP",Empty
	bne	CMAPLoop
	adda.l	#4,a2
	moveq	#0,d7
	move.l	_GfxBase,a6
	move.l	SpecColorMap,a5
FarbInit	moveq	#0,d1
	moveq	#0,d2
	moveq	#0,d3
	move.b	(a2)+,d1
	move.b	(a2)+,d2
	move.b	(a2)+,d3
	lsr.b	#4,d1
	lsr.b	#4,d2
	lsr.b	#4,d3
	move.b	d1,(a5)+
	move.b	d2,(a5)+
	move.b	d3,(a5)+
	move.l	VP,a0
	move.l	d7,d0
	jsr	SetRGB4(a6)
	add.w	#1,d7
	cmp.w	d6,d7
	bne	FarbInit
	clr.l	Empty
	lea	Empty,a0
BODYLoop	move.b	1(a0),(a0)
	move.b	2(a0),1(a0)
	move.b	3(a0),2(a0)
	move.b	(a2)+,3(a0)
	cmpi.l	#"BODY",Empty
	bne	BODYLoop
	adda.l	#4,a2
	move.l	a2,BodyBegin
DeCode	move.l	ScreenPointer,a0
	move.l	$58(a0),a0
	lea	BitMapAdr,a1
	move.l	8(a0),(a1)
	move.l	12(a0),4(a1)
	move.l	16(a0),8(a1)
	move.l	20(a0),12(a1)
	move.l	24(a0),16(a1)
	tst.w	Compression
	bne	DifficultCode
	moveq	#0,d3
EasyBit	move.w	Hight,d2
	sub.w	#1,d2
EasyHight	lea	BitMapAdr,a0
	move.w	Depth,d1
	sub.w	#1,d1
EasyDepth	move.l	(a0)+,a1
	add.l	d3,a1
	move.w	BytesPerRow,d0
	sub.w	#1,d0
EasyCopy	move.b	(a2)+,(a1)+
	dbf	d0,EasyCopy
	dbf	d1,EasyDepth
	add.l	BytesRowLong,d3
	dbf	d2,EasyHight
	bra	DeCodeEnd
DifficultCode	clr.l	xyPos
	move.w	Hight,d3
	sub.w	#1,d3
HightLoop	lea	BitMapAdr,a1
	move.w	Depth,d2
	sub.w	#1,d2
DepthLoop	move.l	(a1)+,d0
	add.l	xyPos,d0
	move.l	d0,a0
	moveq	#0,d1
Row	cmp.w	BytesPerRow,d1
	bge	Interpreted
	move.b	(a2)+,Byte
	move.b	(a2)+,Byte+1
	moveq	#0,d0
	move.b	Byte,d0
	cmpi.b	#127,d0
	bls	DeEasy
DeSame	sub.b	#3,d0
	move.w	#254,d4
	sub.b	d0,d4
	add.w	d4,d1
	sub.w	#1,d4
DeSameCopy	move.b	Byte+1,(a0)+
	dbf	d4,DeSameCopy
	bra	Row
DeEasy	move.b	Byte+1,(a0)+
	add.w	#1,d1
	tst.b	Byte
	beq	Row
	add.w	d0,d1
	sub.w	#1,d0
DeEasyCopy	move.b	(a2)+,(a0)+
	dbf	d0,DeEasyCopy
	bra	Row
Interpreted	dbf	d2,DepthLoop
	move.l	BytesRowLong,d0
	add.l	d0,xyPos
	dbf	d3,HightLoop
DeCodeEnd	move.l	IFFData,a1
	move.l	DateiLength,d0
	move.l	4.w,a6
	jsr	FreeMem(a6)
	move.l	ScreenPointer,d0
	move.l	SpecColorMap,d1
	rts
	;	d0=Screenpointer,d1=Colormap
NotFound	moveq.l	#0,d0
	rts
Compression	dc.w	0
BytesRowLong	dc.w	0
BytesPerRow	dc.w	0
Byte	dc.w	0
DateiName	dc.l	0
DateiLength	dc.l	0
ColorMap	dc.l	0
ScreenPointer	dc.l	0
VP	dc.l	0
RP	dc.l	0
SpecColorMap	dc.l	0
BitMapAdr	ds.l	5
ScreenData	dc.w	0,0
Width	dc.w	0
Hight	dc.w	0
Depth	dc.w	0
	dc.w	0
	dc.w	0,0
	dc.l	0,0,0,0
Empty	dc.l	0
xyPos	dc.l	0
BodyBegin	dc.l	0
IFFData	dc.l	0

MouseTest	btst	#6,ciaapra
	bne	MouseTest
	rts

WanZhao	;	d0=Screenpointer,d1=SpecColorMap
	move.l	d1,d6
	move.l	d0,a0
	move.l	_IntBase,a6
	jsr	CloseScreen(a6)
	move.l	4.w,a6
	move.l	d6,a1
	move.l	#96,d0
	jsr	FreeMem(a6)
	rts

