	include	"/includes/exec/exec_lib.i"
	include	"/includes/libraries/dos_lib.i"
	include	"/includes/hardware/offsets.i"
SPointer	equ	0
SLength	equ	4
SPeriod	equ	6
SVolume	equ	8
SLoop	equ	9
	clr.b	-1(a0,d0)
	move.l	a0,d5
	lea	dosname,a1
	moveq	#0,d0
	move.l	4.w,a6
	jsr	OpenLibrary(a6)
	move.l	d0,_DosBase
	jsr	InitInterrupts
	lea	MindPower,a0
	move.l	d5,a1
	move.w	#64,d0
	jsr	InitSample
	lea	$DFF000,a5
	move.w	#$F,dmacon(a5)
	lea	MindPower,a0
	moveq	#2,d0
	bsr	PlaySample
MausTest	btst	#6,ciaapra
	bne	MausTest
	move.w	#$F,dmacon(a5)
	move.w	#$80,intena(a5)
NotFound	move.l	4.w,a6
	lea	MindPower,a0
	jsr	CloseSample
	jsr	RemInterrupts
	move.l	_DosBase,a1
	jsr	CloseLibrary(a6)
	rts
PlaySample	movem.l	d1-2/a1,-(sp)
	moveq	#1,d1
	lsl.w	d0,d1
	move.w	d1,dmacon(a5)
	move.w	d0,d2
	lsl.w	#4,d2
	add.w	#aud0lch,d2
	move.l	SPointer(a0),(a5,d2.w)
	move.w	SLength(a0),4(a5,d2.w)
	move.w	SPeriod(a0),6(a5,d2.w)
	move.b	SVolume(a0),9(a5,d2.w)
	move.w	#$80,d2
	lsl.w	d0,d2
	move.w	d2,intena(a5)
	lea	Loop0,a1
	clr.b	(a1,d0.w)
	tst.b	SLoop(a0)
	bne	EndlosLoop
	or.w	#$8000,d2
	move.w	d2,intena(a5)
EndlosLoop	or.w	#$8000,d1
	move.w	d1,dmacon(a5)
	movem.l	(sp)+,d1-2/a1
	rts
InitInterrupts	move.l	4.w,a6
	lea	Interrupt0Str,a1
	moveq	#7,d0
	jsr	SetIntVector(a6)
	move.l	d0,FormAud0Struct
	lea	Interrupt1Str,a1
	moveq	#8,d0
	jsr	SetIntVector(a6)
	move.l	d0,FormAud1Struct
	lea	Interrupt2Str,a1
	moveq	#9,d0
	jsr	SetIntVector(a6)
	move.l	d0,FormAud2Struct
	lea	Interrupt3Str,a1
	moveq	#10,d0
	jsr	SetIntVector(a6)
	move.l	d0,FormAud3Struct
	rts
RemInterrupts	move.l	4.w,a6
	move.l	FormAud0Struct,a1
	moveq	#7,d0
	jsr	SetIntVector(a6)
	move.l	FormAud1Struct,a1
	moveq	#8,d0
	jsr	SetIntVector(a6)
	move.l	FormAud2Struct,a1
	moveq	#9,d0
	jsr	SetIntVector(a6)
	move.l	FormAud3Struct,a1
	moveq	#10,d0
	jsr	SetIntVector(a6)
	rts
CloseSample	move.l	SPointer(a0),a1
	moveq	#0,d0
	move.w	SLength(a0),d0
	lsl.w	d0
	move.l	4.w,a6
	jsr	FreeMem(a6)
	rts
InitSample	movem.l	d1-7/a2-4,-(sp)
	move.l	d0,d7
	move.l	a0,a3
	move.l	a1,d1
	move.l	#1005,d2
	move.l	_DosBase,a6
	jsr	Open(a6)
	tst.l	d0
	bne	GoOn
	movem.l	(sp)+,d1-7/a2-4
	add.l	#4,sp
	bra	NotFound
GoOn	move.l	d0,d4
	move.l	d4,d1
	move.l	a3,d2
	move.l	#8,d3
	jsr	Read(a6)
	move.l	4(a3),d0
	move.l	d0,d5
	move.l	4.w,a6
	moveq	#1,d1
	jsr	AllocMem(a6)
	move.l	d0,a4
	move.l	d0,d6
	move.l	d5,d3
	move.l	d4,d1
	move.l	d0,d2
	move.l	_DosBase,a6
	jsr	Read(a6)
	move.l	d4,d1
	jsr	Close(a6)
	moveq	#0,d0
	move.w	24(a4),d0
	lsr.w	#6,d0
	move.l	#55930,d1
	divu	d0,d1
	move.w	d1,SPeriod(a3)
	move.b	d7,SVolume(a3)
	adda.l	#32,a4
	clr.l	(a3)
UntilBody	move.b	1(a3),(a3)
	move.b	2(a3),1(a3)
	move.b	3(a3),2(a3)
	move.b	(a4)+,3(a3)
	cmpi.l	#"BODY",(a3)
	bne	UntilBody
	move.l	(a4),d0
	moveq	#3,d1
	move.l	4.w,a6
	jsr	AllocMem(a6)
	move.l	d0,SPointer(a3)
	move.l	d0,a1
	move.l	(a4)+,d0
	lsr.l	d0
	move.w	d0,SLength(a3)
	sub.w	#1,d0
CopySample	move.w	(a4)+,(a1)+
	dbf	d0,CopySample
	move.l	d6,a1
	move.l	d5,d0
	jsr	FreeMem(a6)
	movem.l	(sp)+,d1-7/a2-4
InitSampleEnd	rts
AudInterrupt0	btst	#0,(a1)
	beq	OnceLoop0
	move.w	#$80,intreq(a0)
	bra	AudInt0End
OnceLoop0	btst	#1,(a1)
	beq	JustInit0
	move.w	#1,dmacon(a0)
	move.w	#$80,intena(a0)
	bra	AudInt0End
JustInit0	add.b	#1,(a1)
	move.w	#$80,intreq(a0)
AudInt0End	rts
AudInterrupt1	btst	#1,(a1)
	beq	JustInit1
	move.w	#2,dmacon(a0)
	move.w	#$100,intena(a0)
	bra	AudInt1End
JustInit1	add.b	#1,(a1)
	move.w	#$100,intreq(a0)
AudInt1End	rts
AudInterrupt2	btst	#1,(a1)
	beq	JustInit2
	move.w	#4,dmacon(a0)
	move.w	#$200,intena(a0)
	bra	AudInt2End
JustInit2	add.b	#1,(a1)
	move.w	#$200,intreq(a0)
AudInt2End	rts
AudInterrupt3	btst	#1,(a1)
	beq	JustInit3
	move.w	#8,dmacon(a0)
	move.w	#$400,intena(a0)
	bra	AudInt3End
JustInit3	add.b	#1,(a1)
	move.w	#$400,intreq(a0)
AudInt3End	rts
_DosBase	dc.l	0
dosname	dc.b	"dos.library",0
MindPower	dc.l	0
	dc.w	0
	dc.w	0
	dc.b	0
	dc.b	0
FormAud0Struct	dc.l	0
FormAud1Struct	dc.l	0
FormAud2Struct	dc.l	0
FormAud3Struct	dc.l	0
Loop0	dc.b	0
Loop1	dc.b	0
Loop2	dc.b	0
Loop3	dc.b	0
Interrupt0Str	ds.l	2
	dc.b	2
	dc.b	0
	dc.l	0
	dc.l	Loop0
	dc.l	AudInterrupt0
Interrupt1Str	ds.l	2
	dc.b	2
	dc.b	0
	dc.l	0
	dc.l	Loop1
	dc.l	AudInterrupt1
Interrupt2Str	ds.l	2
	dc.b	2
	dc.b	0
	dc.l	0
	dc.l	Loop2
	dc.l	AudInterrupt2
Interrupt3Str	ds.l	2
	dc.b	2
	dc.b	0
	dc.l	0
	dc.l	Loop3
	dc.l	AudInterrupt3

