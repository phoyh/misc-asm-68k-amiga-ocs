	cmpi.w	#3,d0
	bhi	OKGoon
	rts
OKGoon	sub.w	#3,d0
	move.w	d0,MessageLength
	cmpi.b	#"-",(a0)
	bne	NoOnce
	adda.l	#1,a0
	sub.w	#1,MessageLength
	move.b	#1,Flag2
NoOnce	move.b	(a0),Nachricht
	move.b	1(a0),Nachricht+1
	move.b	2(a0),Nachricht+2
	lea	Nachricht,a1
	sub.l	#$30303000,Nachricht
	moveq	#0,d0
	move.b	(a1)+,d0
	mulu	#10,d0
	add.b	(a1)+,d0
	mulu	#10,d0
	add.b	(a1)+,d0
	cmpi.l	#450,d0
	ble	OKGoon2
	move.l	#450,d0
OKGoon2	move.l	d0,StarsAmount
	move.l	a0,Nachricht
	add.l	#3,Nachricht
	include	"/includes/exec/exec_lib.i"
	include	"/includes/hardware/offsets.i"
	include	"/includes/graphics/graphics_lib.i"
	clr.w	TextZaehler
	move.l	4.w,a6
	jsr	Forbid(a6)
	movea.l	#0,a1
	jsr	FindTask(a6)
	move.l	d0,Task
	move.l	d0,a1
	move.b	#21,d0
	jsr	SetTaskPri(a6)
	move.l	#3456,d0
	move.l	#2,d1
	jsr	AllocMem(a6)
	move.l	d0,LaufAdr
	move.l	#3456,d0
	move.l	#2,d1
	jsr	AllocMem(a6)
	move.l	d0,LaufAdr2
	move.l	#2000,d0
	move.l	#$10001,d1
	jsr	AllocMem(a6)
	move.l	d0,starmem
	move.l	#1456,d0
	moveq	#3,d1
	jsr	AllocMem(a6)
	move.l	d0,CL
	move.l	#1456,d0
	moveq	#3,d1
	jsr	AllocMem(a6)
	move.l	d0,CL2
	move.l	CL,a4
	move.w	#bpl1pth,(a4)
	move.w	#bpl1ptl,4(a4)
	move.w	#bpl3pth,8(a4)
	move.w	#bpl3ptl,12(a4)
	move.w	#bpl5pth,16(a4)
	move.w	#bpl5ptl,20(a4)
	move.w	#bpl2pth,24(a4)
	move.w	#bpl2ptl,28(a4)
	move.w	#bpl4pth,32(a4)
	move.w	#bpl4ptl,36(a4)
	move.w	#bpl6pth,40(a4)
	move.w	#bpl6ptl,44(a4)
	move.l	CL,a4
	move.l	#(256*255+$DF)*65536+$FFFE,48(a4)
	adda.l	#52,a4
	move.l	LaufAdr,d0
	add.l	#2,d0
	move.w	d0,d2
	swap	d0
	move.w	d0,d1
	move.l	LaufAdr,d0
	add.l	#1154,d0
	move.w	d0,d4
	swap	d0
	move.w	d0,d3
	move.l	LaufAdr,d0
	add.l	#2306,d0
	move.w	d0,d6
	swap	d0
	move.w	d0,d5
	moveq	#23,d7
	move.l	#(15*256+1)*65536+$FFFE,d0
	lea	LaufCycle,a2
IniterLauf	move.l	d0,(a4)
	move.w	#bpl1pth,4(a4)
	move.w	d1,6(a4)
	move.w	#bpl1ptl,8(a4)
	move.w	d2,10(a4)
	move.w	#bpl3pth,12(a4)
	move.w	d3,14(a4)
	move.w	#bpl3ptl,16(a4)
	move.w	d4,18(a4)
	move.w	#bpl5pth,20(a4)
	move.w	d5,22(a4)
	move.w	#bpl5ptl,24(a4)
	move.w	d6,26(a4)
	add.l	#48,d2
	add.l	#48,d4
	add.l	#48,d6
	swap	d2
	swap	d4
	swap	d6
	add.w	d2,d1
	add.w	d4,d3
	add.w	d6,d5
	swap	d2
	swap	d4
	swap	d6
	adda.l	#28,a4
	move.b	#7,LaufZaehler
	move.w	#color01,TextZaehler
	move.w	(a2)+,a3
	move.l	d0,a0
	move.w	a3,d0
	lsr.w	#3,d0
	and.w	#$110,d0
	move.w	d0,a1
	move.l	a0,d0
NeueFarb	move.w	TextZaehler,(a4)+
	move.w	a3,(a4)+
	adda.w	#2,a3
	sub.w	a1,a3
	sub.b	#1,LaufZaehler
	add.w	#2,TextZaehler	
	tst.b	LaufZaehler
	bne	NeueFarb
	add.l	#$1000000,d0
	dbf	d7,IniterLauf
	move.l	CL,a4
	move.l	#(39*256+1)*65536+$FFFE,1396(a4)
	move.w	#bpl1pth,1400(a4)
	move.w	#bpl1ptl,1404(a4)
	move.w	#bpl3pth,1408(a4)
	move.w	#bpl3ptl,1412(a4)
	move.w	#bpl5pth,1416(a4)
	move.w	#bpl5ptl,1420(a4)
	lea	Colours+2,a3
	adda.l	#1424,a4
	move.w	#color01,d0
NormalColour	move.w	d0,(a4)+
	move.w	(a3)+,(a4)+
	add.w	#2,d0
	cmpi.w	#color08,d0
	bne	NormalColour
	move.l	#$FFFFFFFE,1452(a4)
	lea	BitPlanes2,a4
	move.l	a4,BitMap2
	lea	BitPlanes1,a4
	move.l	a4,BitMap1
	moveq	#5,d7
allocloop	move.l	#11880,d0
	move.l	#$10003,d1
	jsr	AllocMem(a6)
	move.l	d0,(a4)+
	dbf	d7,allocloop
	move.l	BitMap1,a0
	move.l	CL,a4
	moveq	#2,d7
CopperInit	move.l	(a0)+,d0
	move.w	d0,6(a4)
	swap	d0
	move.w	d0,2(a4)
	swap	d0
	add.l	#11440,d0
	move.w	d0,1406(a4)
	swap	d0
	move.w	d0,1402(a4)
	adda.l	#8,a4
	dbf	d7,CopperInit
	move.l	BitMap2,a0
	move.l	CL,a4
	adda.l	#24,a4
	moveq	#2,d7
CopperInit2	move.l	(a0)+,d0
	move.w	d0,6(a4)
	swap	d0
	move.w	d0,2(a4)
	adda.l	#8,a4
	dbf	d7,CopperInit2
	move.l	CL,a0
	move.l	CL2,a1
	move.w	#363,d7
CopperListCopy	move.l	(a0)+,(a1)+
	dbf	d7,CopperListCopy
	move.l	CL2,a4
	adda.l	#52,a4
	move.l	LaufAdr2,d0
	add.l	#2,d0
	move.w	d0,d2
	swap	d0
	move.w	d0,d1
	move.l	LaufAdr2,d0
	add.l	#1154,d0
	move.w	d0,d4
	swap	d0
	move.w	d0,d3
	move.l	LaufAdr2,d0
	add.l	#2306,d0
	move.w	d0,d6
	swap	d0
	move.w	d0,d5
	moveq	#23,d7
	move.l	#(15*256+1)*65536+$FFFE,d0
	lea	LaufCycle,a2
Initer2Lauf	move.l	d0,(a4)
	move.w	#bpl1pth,4(a4)
	move.w	d1,6(a4)
	move.w	#bpl1ptl,8(a4)
	move.w	d2,10(a4)
	move.w	#bpl3pth,12(a4)
	move.w	d3,14(a4)
	move.w	#bpl3ptl,16(a4)
	move.w	d4,18(a4)
	move.w	#bpl5pth,20(a4)
	move.w	d5,22(a4)
	move.w	#bpl5ptl,24(a4)
	move.w	d6,26(a4)
	add.l	#48,d2
	add.l	#48,d4
	add.l	#48,d6
	swap	d2
	swap	d4
	swap	d6
	add.w	d2,d1
	add.w	d4,d3
	add.w	d6,d5
	swap	d2
	swap	d4
	swap	d6
	adda.l	#28,a4
	move.b	#7,LaufZaehler
	move.w	#color01,TextZaehler
	move.w	(a2)+,a3
	move.l	d0,a0
	move.w	a3,d0
	lsr.w	#3,d0
	and.w	#$110,d0
	move.w	d0,a1
	move.l	a0,d0
Neue2Farb	move.w	TextZaehler,(a4)+
	move.w	a3,(a4)+
	adda.w	#2,a3
	suba.w	a1,a3
	sub.b	#1,LaufZaehler
	add.w	#2,TextZaehler	
	tst.b	LaufZaehler
	bne	Neue2Farb
	add.l	#$1000000,d0
	dbf	d7,Initer2Lauf
	lea	GrafName,a1
	moveq	#0,d0
	jsr	OpenLibrary(a6)
	move.l	d0,_GfxBase
	lea	$DFF000,a5
	move.w	#$3E0,dmacon(a5)
	move.w	#35*256+110,diwstrt(a5)
	move.w	#(305-256)*256+458-256,diwstop(a5)
	move.w	#48,ddfstrt(a5)
	move.w	#214,ddfstop(a5)
	move.w	#0,bplcon1(a5)
	move.w	#0,bplcon2(a5)
	move.w	#$6400,bplcon0(a5)
	move.w	#0,bpl1mod(a5)
	move.w	#0,bpl2mod(a5)
	move.l	CL,cop1lch(a5)
	move.w	#0,copjmp1(a5)
	move.w	#$83C0,dmacon(a5)
	clr.w	spr0data(a5)
	clr.w	spr0datb(a5)
	moveq	#15,d7
	lea	$DFF180,a0
	lea	Colours,a1
LoadRGB	move.w	(a1)+,(a0)+
	dbf	d7,LoadRGB
	move.l	BitPlanes1,a2
	move.l	BitPlanes1+4,a3
	move.l	BitPlanes1+8,a4
	lea	S,a1
	move.l	#5519-1,d0
jui	moveq	#7,d7
ki	move.b	(a1),(a2,d0.w)
	move.b	(a1)+,(a4,d0.w)
	add.w	#44,d0
	dbf	d7,ki
	lea	T,a1
	move.l	#5520-1,d0
	moveq	#7,d7
kir2	move.b	(a1)+,(a4,d0.w)
	add.w	#44,d0
	dbf	d7,kir2
	lea	A,a1
	move.l	#5521-1,d0
	moveq	#7,d7
kir3	move.b	(a1),(a3,d0.w)
	move.b	(a1)+,(a2,d0.w)
	add.w	#44,d0
	dbf	d7,kir3
	lea	R,a1
	move.l	#5522-1,d0
	moveq	#7,d7
kir4	move.b	(a1)+,(a3,d0.w)
	add.w	#44,d0
	dbf	d7,kir4
	lea	S,a1
	move.l	#5523-1,d0
	moveq	#7,d7
kir5	move.b	(a1)+,(a2,d0.w)
	add.w	#44,d0
	dbf	d7,kir5
	lea	B,a1
	move.l	#5525,d0
	moveq	#7,d7
kir6	move.b	(a1)+,(a3,d0.w)
	add.w	#44,d0
	dbf	d7,kir6
	lea	Y,a1
	move.l	#5526,d0
	moveq	#7,d7
kir7	move.b	(a1),(a3,d0.w)
	move.b	(a1)+,(a2,d0.w)
	add.w	#44,d0
	dbf	d7,kir7
	lea	P,a1
	move.l	#5999+5,d0
	moveq	#7,d7
kir8	move.b	(a1)+,(a2,d0.w)
	add.w	#44,d0
	dbf	d7,kir8
	lea	H,a1
	move.l	#6000+5,d0
	moveq	#7,d7
kir9	move.b	(a1)+,(a3,d0.w)
	add.w	#44,d0
	dbf	d7,kir9
	lea	O,a1
	move.l	#6001+5,d0
	moveq	#7,d7
kir10	move.b	(a1),(a3,d0.w)
	move.b	(a1)+,(a2,d0.w)
	add.w	#44,d0
	dbf	d7,kir10
	lea	Y,a1
	move.l	#6002+5,d0
	moveq	#7,d7
kir11	move.b	(a1)+,(a4,d0.w)
	add.w	#44,d0
	dbf	d7,kir11
	lea	H,a1
	move.l	#6003+5,d0
	moveq	#7,d7
kir12	move.b	(a1),(a4,d0.w)
	move.b	(a1)+,(a2,d0.w)
	add.w	#44,d0
	dbf	d7,kir12
	move.l	LaufAdr,a0
	move.l	LaufAdr2,a1
	move.w	#863,d7
Clearing	clr.l	(a0)+
	clr.l	(a1)+
	dbf	d7,Clearing
	move.b	#16,LaufZaehler
	clr.w	TextZaehler
Loop	move.l	LaufAdr,d7
	move.l	LaufAdr2,LaufAdr
	move.l	d7,LaufAdr2
	move.l	CL,d7
	move.l	CL2,CL
	move.l	d7,CL2
	jsr	LaufSchrift
	move.l	CL,cop1lch(a5)
	clr.b	Flag
	move.l	BitMap2,a2
	move.l	4(a2),a3
	move.l	8(a2),a4
	move.l	(a2),a2
	lea	starvectors,a0
	move.l	starmem,a1
	move.l	StarsAmount,d7
DrawStars	jsr	DrawLauf
	move.w	(a1),d0
	move.w	2(a1),d1
	bclr	d1,(a2,d0.w)
	bclr	d1,(a3,d0.w)
	bclr	d1,(a4,d0.w)
	sub.b	#1,2(a0)
	moveq	#0,d2
	moveq	#0,d1
	moveq	#0,d0
	move.b	2(a0),d2
	tst.b	d2
	beq	NewDef
	move.b	(a0),d0
	move.b	1(a0),d1
	lsl.w	#8,d0
	lsl.w	#8,d1
	divu	d2,d0
	divu	d2,d1
	cmpi.w	#347,d0
	bhi	NewDef
	cmpi.w	#269,d1
	bhi	NewDef
	move.w	d0,d3
	not.w	d3
	and.w	#7,d3
	lsr.w	#3,d0
	mulu	#44,d1
	add.w	d0,d1
	move.w	d1,(a1)+
	move.w	d3,(a1)+
	btst	#5,d2
	bne	Map2
	bset	d3,(a2,d1.w)
Map2	btst	#6,d2
	bne	Map3
	bset	d3,(a3,d1.w)
Map3	btst	#7,d2
	bne	MapFinished
	bset	d3,(a4,d1.w)
MapFinished	adda.l	#3,a0
InitStarsEnd	dbf	d7,DrawStars
	include	"/libs/CheckInterruption"
	cmpi.b	#129,Flag2
	bne	Loop
Unterbruch	move.l	_GfxBase,a1
	move.l	38(a1),cop1lch(a5)
	move.w	#0,copjmp1(a5)
	move.w	#$83E0,dmacon(a5)
	move.l	4.w,a6
	lea	BitPlanes1,a4
	moveq	#5,d7
freeloop	move.l	(a4)+,a1
	move.l	#11880,d0
	jsr	FreeMem(a6)
	dbf	d7,freeloop
	move.l	CL,a1
	move.l	#1456,d0
	jsr	FreeMem(a6)
	move.l	CL2,a1
	move.l	#1456,d0
	jsr	FreeMem(a6)
	move.l	starmem,a1
	move.l	#2000,d0
	jsr	FreeMem(a6)
	move.l	LaufAdr,a1
	move.l	#3456,d0
	jsr	FreeMem(a6)
	move.l	LaufAdr2,a1
	move.l	#3456,d0
	jsr	FreeMem(a6)
	move.l	_GfxBase,a1
	jsr	CloseLibrary(a6)
	movea.l	#0,a1
	jsr	FindTask(a6)
	move.l	d0,Task
	move.l	d0,a1
	move.b	#-127,d0
	jsr	SetTaskPri(a6)
	jsr	Permit(a6)
	rts
NewDef	move.l	#7,(a1)+
	move.w	vhposr(a5),d0
	lsl.b	#4,d0
	move.b	d0,(a0)+
	lsr.w	#8,d0
	move.b	d0,(a0)+
	move.b	#255,(a0)+
	bra	InitStarsEnd
DrawLauf	btst	#7,Flag
	bne	DrawLaufNIX
	btst	#6,dmaconr(a5)
	bne	DrawLaufNIX
	bset	#7,Flag
	move.l	LaufAdr2,d0
	move.l	d0,bltdpth(a5)
	move.l	LaufAdr,d0
	add.l	#2,d0
	move.l	d0,bltapth(a5)
	clr.w	bltamod(a5)
	clr.w	bltdmod(a5)
	move.w	#%1111100111110000,bltcon0(a5)
	clr.w	bltcon1(a5)
	move.w	#$FFFF,bltalwm(a5)
	move.w	#$8FFF,bltafwm(a5)
	move.w	#72*64+24,bltsize(a5)
DrawLaufNIX	rts
LaufSchrift	tst.b	LaufZaehler
	bne	LaufWeiter
	move.b	#15,LaufZaehler
	move.l	LaufAdr,a0
	adda.l	#46,a0
	move.l	Nachricht,a1
	move.w	TextZaehler,d0
	cmp.w	MessageLength,d0
	blt	LaufOK
	clr.w	TextZaehler
	moveq	#0,d0
	bset	#7,Flag2
LaufOK	moveq	#0,d1
	move.b	(a1,d0.w),d1
	lsl.w	d1
	lea	ZuordnungMap,a2
	move.w	(a2,d1.w),d0
	lea	HelFont,a2
	move.l	a0,a3
	move.l	a0,a4
	adda.l	#1152,a3
	adda.l	#2304,a4
	moveq	#23,d7
DrawLetter	move.w	(a2,d0.w),d1
	move.w	d1,d2
	move.w	d1,d3
	and.w	#$D5AB,d1
	and.w	#$33CC,d2
	and.w	#$FF0,d3
	add.w	#2,d0
	move.w	d1,(a0)
	move.w	d2,(a3)
	move.w	d3,(a4)
	adda.l	#48,a0
	adda.l	#48,a3
	adda.l	#48,a4
	dbf	d7,DrawLetter
	add.w	#1,TextZaehler
	move.l	LaufAdr,a0
	bra	LaufNIX
LaufWeiter	sub.b	#1,LaufZaehler	
LaufNIX	rts
_GfxBase	dc.l	0
GrafName	GRAFNAME
Colours	dc.w	0,$006,$105,$204,$303,$402,$501,$600
	dc.w	0,$222,$444,$666,$888,$AAA,$CCC,$EEE
BitMap1	dc.l	0
BitMap2	dc.l	0
BitPlanes1	ds.l	3
BitPlanes2	ds.l	3
CL	dc.l	0
CL2	dc.l	0
LaufAdr	dc.l	0
LaufAdr2	dc.l	0
StarsAmount	dc.l	0
starmem	dc.l	0
starvectors	dc.w	31883,10957,64901,56551,26652,47723,38840,29471,46854,55548,23063,4562,27007,21986,26231
	dc.w	41859,53242,4033,45290,39928,40747,47228,46022,56372,17415,55609,25503,54907,30657,5724
	dc.w	25415,62033,5069,45960,30676,12412,9696,22433,15513,3837,17388,4299,5930,44313,8231
	dc.w	39018,27483,12117,23812,55075,3905,25460,41271,43225,65326,42106,60340,57520,20921,65195
	dc.w	10161,36109,27572,37772,159,31635,29746,15840,63027,64805,2186,30123,45153,59882,12365
	dc.w	29746,37726,58691,37200,38903,37789,57814,58279,2240,18899,58758,42407,39824,18163,3448
	dc.w	4068,63147,43056,53774,18736,62870,60160,35566,55969,19732,279,13051,25482,28457,42087
	dc.w	7952,42719,56940,47824,52352,4829,32132,29786,7028,62291,46128,34855,63645,21032,62659
	dc.w	61243,35057,36989,43988,46043,48546,43703,29748,21898,10279,48251,35577,27915,3633,50348
	dc.w	33654,36964,48565,43374,15168,30425,8425,31782,3625,23789,37437,64886,19015,43107,61544
	dc.w	24901,58348,52289,62046,21172,27055,27851,47954,14377,14433,50051,44728,46918,61207,17200
	dc.w	33860,30961,8999,31699,39915,11598,21538,16049,37344,53183,8158,591,4759,10986,46701
	dc.w	34415,61124,40114,36389,47127,28508,6716,22425,54667,59793,29674,12702,53837,37594,55649
	dc.w	7495,64291,38120,40326,45543,55824,25009,14973,4373,23129,18280,38312,6818,11393,17537
	dc.w	33709,57507,27212,7088,35951,23406,31422,42985,61202,23956,13851,28769,58874,51178,18920
	dc.w	31883,10957,64901,56551,26652,47723,38840,29471,46854,55548,23063,4562,27007,21986,26231
	dc.w	41859,53242,4033,45290,39928,40747,47228,46022,56372,17415,55609,25503,54907,30657,5724
	dc.w	25415,62033,5069,45960,30676,12412,9696,22433,15513,3837,17388,4299,5930,44313,8231
	dc.w	39018,27483,12117,23812,55075,3905,25460,41271,43225,65326,42106,60340,57520,20921,65195
	dc.w	10161,36109,27572,37772,159,31635,29746,15840,63027,64805,2186,30123,45153,59882,12365
	dc.w	29746,37726,58691,37200,38903,37789,57814,58279,2240,18899,58758,42407,39824,18163,3448
	dc.w	4068,63147,43056,53774,18736,62870,60160,35566,55969,19732,279,13051,25482,28457,42087
	dc.w	7952,42719,56940,47824,52352,4829,32132,29786,7028,62291,46128,34855,63645,21032,62659
	dc.w	61243,35057,36989,43988,46043,48546,43703,29748,21898,10279,48251,35577,27915,3633,50348
	dc.w	33654,36964,48565,43374,15168,30425,8425,31782,3625,23789,37437,64886,19015,43107,61544
	dc.w	24901,58348,52289,62046,21172,27055,27851,47954,14377,14433,50051,44728,46918,61207,17200
	dc.w	33860,30961,8999,31699,39915,11598,21538,16049,37344,53183,8158,591,4759,10986,46701
	dc.w	34415,61124,40114,36389,47127,28508,6716,22425,54667,59793,29674,12702,53837,37594,55649
	dc.w	7495,64291,38120,40326,45543,55824,25009,14973,4373,23129,18280,38312,6818,11393,17537
	dc.w	33709,57507,27212,7088,35951,23406,31422,42985,61202,23956,13851,28769,58874,51178,18920
	dc.w	31883,10957,64901,56551,26652,47723,38840,29471,46854,55548,23063,4562,27007,21986,26231
	dc.w	41859,53242,4033,45290,39928,40747,47228,46022,56372,17415,55609,25503,54907,30657,5724
	dc.w	25415,62033,5069,45960,30676,12412,9696,22433,15513,3837,17388,4299,5930,44313,8231
	dc.w	39018,27483,12117,23812,55075,3905,25460,41271,43225,65326,42106,60340,57520,20921,65195
	dc.w	10161,36109,27572,37772,159,31635,29746,15840,63027,64805,2186,30123,45153,59882,12365
	dc.w	29746,37726,58691,37200,38903,37789,57814,58279,2240,18899,58758,42407,39824,18163,3448
	dc.w	4068,63147,43056,53774,18736,62870,60160,35566,55969,19732,279,13051,25482,28457,42087
	dc.w	7952,42719,56940,47824,52352,4829,32132,29786,7028,62291,46128,34855,63645,21032,62659
	dc.w	61243,35057,36989,43988,46043,48546,43703,29748,21898,10279,48251,35577,27915,3633,50348
	dc.w	33654,36964,48565,43374,15168,30425,8425,31782,3625,23789,37437,64886,19015,43107,61544
	dc.w	24901,58348,52289,62046,21172,27055,27851,47954,14377,14433,50051,44728,46918,61207,17200
	dc.w	33860,30961,8999,31699,39915,11598,21538,16049,37344,53183,8158,591,4759,10986,46701
	dc.w	34415,61124,40114,36389,47127,28508,6716,22425,54667,59793,29674,12702,53837,37594,55649
	dc.w	7495,64291,38120,40326,45543,55824,25009,14973,4373,23129,18280,38312,6818,11393,17537
	dc.w	33709,57507,27212,7088,35951,23406,31422,42985,61202,23956,13851,28769,58874,51178,18920
LaufCycle	dc.w	$B40
	dc.w	$C30
	dc.w	$D20
	dc.w	$E10
	dc.w	$F00
	dc.w	$E10
	dc.w	$D20
	dc.w	$C30
	dc.w	$B40
	dc.w	$A50
	dc.w	$960
	dc.w	$870
	dc.w	$780
	dc.w	$690
	dc.w	$5A0
	dc.w	$4B0
	dc.w	$3C0
	dc.w	$2D0
	dc.w	$1E0
	dc.w	$0F0
	dc.w	$1E0
	dc.w	$2D0
	dc.w	$3C0
	dc.w	$4B0
PlaneZaehler2	dc.b	0
Flag	dc.b	0
Flag2	dc.b	0
LaufZaehler	dc.b	0
A	dc.b	%00111000
	dc.b	%01101100
	dc.b	%11000110
	dc.b	%11000110
	dc.b	%11111110
	dc.b	%11000110
	dc.b	%11000110
	dc.b	0
B	dc.b	%11111000
	dc.b	%11001100
	dc.b	%11001100
	dc.b	%11111000
	dc.b	%11001110
	dc.b	%11000110
	dc.b	%11111100
	dc.b	0
E	dc.b	%11111110
	dc.b	%11000000
	dc.b	%11000000
	dc.b	%11111110
	dc.b	%11000000
	dc.b	%11000000
	dc.b	%11111110
	dc.b	0
H	dc.b	%11000110
	dc.b	%11000110
	dc.b	%11101110
	dc.b	%11111110
	dc.b	%11101110
	dc.b	%11000110
	dc.b	%11000110
	dc.b	0
I	dc.b	%01111110
	dc.b	%00111100
	dc.b	%00011000
	dc.b	%00011000
	dc.b	%00011000
	dc.b	%00111100
	dc.b	%01111110
	dc.b	0
L	dc.b	%11111000
	dc.b	%10110000
	dc.b	%01100000
	dc.b	%01100000
	dc.b	%01100000
	dc.b	%01100110
	dc.b	%11111110
	dc.b	0
O	dc.b	%01111100
	dc.b	%11000110
	dc.b	%11000110
	dc.b	%11000110
	dc.b	%11000110
	dc.b	%11000110
	dc.b	%01111100
	dc.b	0
P	dc.b	%11111100
	dc.b	%11000110
	dc.b	%11000110
	dc.b	%11111100
	dc.b	%11000000
	dc.b	%11000000
	dc.b	%11000000
	dc.b	0
R	dc.b	%11111100
	dc.b	%11000110
	dc.b	%11000110
	dc.b	%11111100
	dc.b	%11110000
	dc.b	%11011000
	dc.b	%11001100
	dc.b	0
S	dc.b	%01111100
	dc.b	%11000110
	dc.b	%11000000
	dc.b	%01111100
	dc.b	%00000110
	dc.b	%11000110
	dc.b	%01111100
	dc.b	0
T	dc.b	%11111110
	dc.b	%11111110
	dc.b	%00111000
	dc.b	%00111000
	dc.b	%00111000
	dc.b	%00111000
	dc.b	%00111000
	dc.b	0
Y	dc.b	%11000110
	dc.b	%11101110
	dc.b	%01101100
	dc.b	%01111100
	dc.b	%00111000
	dc.b	%00111000
	dc.b	%00111000
	dc.b	0
Nachricht	dc.l	0
MessageLength	dc.w	0
TextZaehler	dc.w	0
Task	dc.l	0
ZuordnungMap	dcb.w	33,0
	dc.w	1*48
	dc.w	2*48
	dc.w	3*48
	dc.w	4*48
	dc.w	5*48
	dc.w	6*48
	dc.w	7*48
	dc.w	8*48
	dc.w	9*48
	dc.w	10*48
	dc.w	11*48
	dc.w	12*48
	dc.w	13*48
	dc.w	14*48
	dc.w	15*48
	dc.w	16*48
	dc.w	17*48
	dc.w	18*48
	dc.w	19*48
	dc.w	20*48
	dc.w	21*48
	dc.w	22*48
	dc.w	23*48
	dc.w	24*48
	dc.w	25*48
	dc.w	26*48
	dc.w	27*48
	dc.w	28*48
	dc.w	29*48
	dc.w	30*48
	dc.w	31*48
	dc.w	32*48
	dc.w	33*48
	dc.w	34*48
	dc.w	35*48
	dc.w	36*48
	dc.w	37*48
	dc.w	38*48
	dc.w	39*48
	dc.w	40*48
	dc.w	41*48
	dc.w	42*48
	dc.w	43*48
	dc.w	44*48
	dc.w	45*48
	dc.w	46*48
	dc.w	47*48
	dc.w	48*48
	dc.w	49*48
	dc.w	50*48
	dc.w	51*48
	dc.w	52*48
	dc.w	53*48
	dc.w	54*48
	dc.w	55*48
	dc.w	56*48
	dc.w	57*48
	dc.w	58*48
	dc.w	59*48
	dc.w	60*48
	dc.w	61*48
	dc.w	62*48
	dc.w	63*48
	dc.w	64*48
	dc.w	65*48
	dc.w	66*48
	dc.w	67*48
	dc.w	68*48
	dc.w	69*48
	dc.w	70*48
	dc.w	71*48
	dc.w	72*48
	dc.w	73*48
	dc.w	74*48
	dc.w	75*48
	dc.w	76*48
	dc.w	77*48
	dc.w	78*48
	dc.w	79*48
	dc.w	80*48
	dc.w	81*48
	dc.w	82*48
	dc.w	83*48
	dc.w	84*48
	dc.w	85*48
	dc.w	86*48
	dc.w	87*48
	dc.w	88*48
	dc.w	89*48
	dc.w	90*48
	dcb.w	46,0
	dc.w	91*48
	dcb.w	26,0
	dc.w	92*48
	dcb.w	17,0
	dc.w	93*48
	dcb.w	5,0
	dc.w	94*48
	dcb.w	2,0
	dc.w	95*48
	dcb.w	4,0
	dc.w	96*48
	dcb.w	17,0
	dc.w	97*48
	dc.w	98*48
	dcb.w	4,0
	dc.w	99*48
	dcb.w	3,0
HelFont	include	"/data/translatedFonts/Hel24Stars"

